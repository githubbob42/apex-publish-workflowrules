<apex:page controller="PublishWorkFlowRuleController" sidebar="false"  standardStylesheets="true" action="{!init}">

  <apex:includeScript value="{!URLFOR($Resource.jszip, '/jszip.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.jszip, '/jszip-load.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.jszip, '/jszip-deflate.js')}"/>
  <apex:includeScript value="{!URLFOR($Resource.jszip, '/jszip-inflate.js')}"/> 

<script>
function createRemoteSite()
{ 
    // Disable button 
    document.getElementById('createremotesitebtn').disabled = true;
    // Calls the Metdata API from JavaScript to create the Remote Site Setting to permit Apex callouts
    var binding = new XMLHttpRequest();
    var request = 
        '<?xml version="1.0" encoding="utf-8"?>' + 
        '<env:Envelope xmlns:env="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">'+
            '<env:Header>' + 
                '<urn:SessionHeader xmlns:urn="http://soap.sforce.com/2006/04/metadata">' + 
                    '<urn:sessionId>{!$Api.Session_ID}</urn:sessionId>' + 
                '</urn:SessionHeader>' + 
            '</env:Header>' + 
            '<env:Body>' +
                '<createMetadata xmlns="http://soap.sforce.com/2006/04/metadata">' + 
                    '<metadata xsi:type="RemoteSiteSetting">' + 
                        '<fullName>{!RemoteSiteSettingName}</fullName>' + 
                        '<description>Remote Site Setting for calling Salesforce APIs</description>' + 
                        '<disableProtocolSecurity>false</disableProtocolSecurity>' + 
                        '<isActive>true</isActive>' + 
                        '<url>https://{!Host}</url>' +
                    '</metadata>' +
                '</createMetadata>' +
            '</env:Body>' + 
        '</env:Envelope>';
    binding.open('POST', 'https://{!Host}/services/Soap/m/31.0');
    binding.setRequestHeader('SOAPAction','""');
    binding.setRequestHeader('Content-Type', 'text/xml');
    binding.onreadystatechange = 
        function() { 
            if(this.readyState==4) {
                var parser = new DOMParser();
                var doc  = parser.parseFromString(this.response, 'application/xml');
                var errors = doc.getElementsByTagName('errors');
                var messageText = '';
                for(var errorIdx = 0; errorIdx < errors.length; errorIdx++)
                    messageText+= errors.item(errorIdx).getElementsByTagName('message').item(0).innerHTML + '\n';
                displayMetadataResponse(messageText);
            } 
        }
    binding.send(request);
}
</script>

<body class="homeTab">

    <apex:form id="form" >

        <apex:actionFunction name="displayMetadataResponse" action="{!displayMetadataResponse}" rerender="myForm">
            <apex:param name="metadataResponse" assignTo="{!metadataResponse}" value="{!metadataResponse}"/>
        </apex:actionFunction>

        <apex:sectionHeader title="Publish Workflow Rules"/>     

        <apex:actionPoller action="{!checkAsyncRequest}" interval="5" rerender="form" rendered="{!NOT(ISNULL(AsyncResult))}"/>

        <apex:pageBlock title="Workflow Rules">
            <apex:pageBlockButtons >
                <apex:commandButton value="Publish" action="{!retrieveWorkflowMetadata}" disabled="{!NOT(AND(AllowPublish, AND(ISNULL(AsyncResult),ISNULL(MetaDataRetrieveZip))))}" />
                <apex:commandButton value="Check Status" action="{!init}" disabled="{!NOT(AND(ISNULL(AsyncResult),ISNULL(MetaDataRetrieveZip)))}" />
            </apex:pageBlockButtons>

            <apex:pageMessages id="messages"/>
    
            <apex:outputPanel rendered="{!MetadataConnectionWarning}">
                <h1>Important Post Install Step:</h1> 
                <p>In order to utlise the features of this tool you need to permit the tool access to the Salesforce Metadata API by adding a <a target="_new" href="http://na1.salesforce.com/help/doc/en/configuring_remoteproxy.htm">Remote Site Setting</a> with this Salesforce Server URL <b>https://{!Host}</b></p>
                <p> Click the <b>Create Remote Site Setting</b> button to have the tool perform this step for you.</p>
                <input id="createremotesitebtn" type="button" onclick="createRemoteSite();" value="Create Remote Site Setting"/>
            </apex:outputPanel>
            <p><b>Overview:</b> This is a tool that generates a Static Resource of the Workflow Rules to be used by FieldFx Mobile.</p>
    
        </apex:pageBlock>

        <apex:outputPanel rendered="{!NOT(ISNULL(MetaDataRetrieveZip))}">
            <apex:actionFunction name="receiveFile" action="{!receiveMetadataZipFile}" rerender="messages,files" oncomplete="unzip();">
                <apex:param name="filename" assignTo="{!MetadataFileName}" value=""/>
                <apex:param name="filedata" assignTo="{!MetadataFileData}" value=""/>
            </apex:actionFunction>  
            <apex:actionFunction name="receiveComplete" action="{!receiveComplete}" rerender="form"/>
            <c:unzip name="unzip" oncomplete="if(more) receiveFile(path, data); else receiveComplete();">{!MetaDataRetrieveZip}</c:unzip>
        </apex:outputPanel>

    </apex:form>

</body>
</apex:page>